# Generated by Django 4.1 on 2023-04-01 22:50

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_athlete', models.BooleanField(default=False)),
                ('is_coach', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ClassTime',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date', models.DateTimeField()),
            ],
            options={
                'verbose_name_plural': 'Classes',
            },
        ),
        migrations.CreateModel(
            name='Club',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=250, unique=True)),
                ('delete_flag', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'Clubs',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=250, unique=True)),
                ('location', models.CharField(blank=True, max_length=250, null=True)),
                ('description', models.CharField(blank=True, max_length=300, null=True)),
                ('date_start', models.DateField()),
                ('date_end', models.DateField()),
                ('delete_flag', models.IntegerField(default=0)),
                ('barcode', models.ImageField(blank=True, upload_to='barcodes/')),
                ('club', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='athletes.club')),
            ],
            options={
                'verbose_name_plural': 'Events',
            },
        ),
        migrations.CreateModel(
            name='Athlete',
            fields=[
                ('user', models.OneToOneField(default='', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('delete_flag', models.IntegerField(default=0)),
                ('first_name', models.CharField(max_length=250)),
                ('last_name', models.CharField(max_length=250)),
                ('address', models.TextField(blank=True, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('year', models.IntegerField(default=0)),
                ('phonenumber', models.CharField(max_length=12)),
                ('weight', models.IntegerField(default=0)),
                ('email', models.CharField(max_length=250)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], default='Male', max_length=20)),
                ('usaw', models.ImageField(blank=True, default='', null=True, upload_to='')),
                ('school', models.CharField(max_length=250)),
                ('contact', models.CharField(max_length=250)),
                ('contactnumber', models.CharField(max_length=12)),
                ('gpa', models.DecimalField(decimal_places=2, default=2.0, max_digits=3)),
                ('transcript', models.ImageField(blank=True, default='', null=True, upload_to='')),
                ('goals', models.CharField(blank=True, max_length=400, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('barcode', models.ImageField(blank=True, default='', upload_to='barcodes/')),
                ('club', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='athletes.club')),
                ('events', models.ManyToManyField(blank=True, to='athletes.event')),
            ],
        ),
        migrations.CreateModel(
            name='Groups',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=250, unique=True)),
                ('delete_flag', models.IntegerField(default=0)),
                ('barcode', models.ImageField(blank=True, upload_to='barcodes/')),
                ('classes', models.ManyToManyField(blank=True, to='athletes.classtime')),
                ('club', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='athletes.club')),
            ],
            options={
                'verbose_name_plural': 'Groups',
            },
        ),
        migrations.CreateModel(
            name='Eventsignup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('paid', models.BooleanField(default=False)),
                ('transportation', models.CharField(choices=[('Team', 'Travel with the Team'), ('Parents', 'Travel with Parents')], max_length=250)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='athletes.event')),
                ('athlete', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='athletes.athlete')),
            ],
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('athlete_id', models.CharField(default='0', max_length=200)),
                ('date', models.DateField(auto_now=True)),
                ('time', models.TimeField(auto_now=datetime.time)),
                ('mark_attendance', models.CharField(choices=[('Present', 'Present'), ('Late', 'Late'), ('Absent', 'Absent')], default='Absent', max_length=50)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('classtime', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='athletes.classtime')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='athletes.groups')),
            ],
            options={
                'verbose_name_plural': 'Attendance',
                'unique_together': {('athlete_id', 'classtime', 'date')},
            },
        ),
        migrations.AddField(
            model_name='athlete',
            name='group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='athletes.groups'),
        ),
    ]
